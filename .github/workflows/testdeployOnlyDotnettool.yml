name: DataMiner CICD Automation

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: []
    tags:
      - "[0-9]+.[0-9]+.[0-9]+.[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+.[0-9]+-**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  artifact_creation_registration_test:
    name: Artifact Registration and Upload
    if: github.ref_type == 'tag'
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      
      - name: Get Tag Information
        id: tag_info
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          COMMIT_SHA=$(git rev-list -n 1 $TAG_NAME)
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
          echo "COMMIT_SHA=${COMMIT_SHA}" >> $GITHUB_ENV

      - name: Find Target Branch
        id: target_branch
        run: |
          TARGET_BRANCH=$(git branch -r --contains ${COMMIT_SHA} | grep -v '\->' | head -n 1 | sed 's/origin\///')
          echo "TARGET_BRANCH=${TARGET_BRANCH}" >> $GITHUB_ENV

      - name: Display Result
        run: |
          echo "Tag: ${TAG_NAME}"
          echo "Commit SHA: ${COMMIT_SHA}"
          echo "Target Branch: ${TARGET_BRANCH}"
 

#  CI:
#    uses: SkylineCommunications/_ReusableWorkflows/.github/workflows/Automation Master Workflow.yml@fixMissingBranchOnUpload
#    with:
#      referenceName: ${{ github.ref_name }}
#      runNumber: ${{ github.run_number }}
#      referenceType: ${{ github.ref_type }}
#      repository: ${{ github.repository }}
#      owner: ${{ github.repository_owner }}
#      sonarCloudProjectName: SkylineCommunications_AutomationScriptTest_SDK_DataAcq
#    secrets:
#      # The API-key: generated in the DCP Admin app (https://admin.dataminer.services/) as authentication for a certain DataMiner System.
#      api-key: ${{ secrets.DATAMINER_DEPLOY_KEY }}
#      sonarCloudToken: ${{ secrets.SONAR_TOKEN }}
